What happens when you initialize a repository? Why do you need to do it?
- Git adds .git file to initialized folder and waits for an initial commit.
-I start to use version control system for this directory.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

- Staging area is a halfway from working directory to repo: files you plan to commit
you add first there, then can decide to add more changes or remove some of them.
- It is temporary location of files. It gives you time to rethink your decision.

How can you use the staging area to make sure you have one commit per logical change?
- After a logical change add the changed file to staging area, then commit.

What are some situations when branches would be helpful in keeping your history
 organized? How would branches help?
 -They help to organize the important modifications of the same project. 

How do the diagrams help you visualize the branch structure?
-I can imagine the location of of the branches and the meaning of messages about
 deattached HEAD.

What is the result of merging two branches together? Why do we represent it in the
 diagram the way we do?
- The result is that Git creates new tip of main branch which contain 2 branches. 
Also, main branch now contains the commits from both branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
 manually?
 An automatic merging is only acceptable in case of no conflicts between commits.
 All other cases need a presence of the author to resolve a conflict.  